services:
  mongo:
    image: mongo
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - mongo-data:/data/db
      - ./SampleCollections:/SampleCollections
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    working_dir: /SampleCollections
    restart: unless-stopped

  node:
    image: node:latest
    environment:
      PORT: 3000
      MONGO_URL: mongodb://root:password@mongo:27017/app?authSource=admin
      DATABASE_URL: postgres://root:password@postgres:5432/app
      JWT_SECRET: secret
      MAILER_SERVICE: Gmail
      MAILER_HOST: smtp.gmail.com
      MAILER_PORT: 465
      MAILER_ADDRESS: dabh45@gmail.com
      MAILER_PASSWORD: ddzx ztcb frrk ijsk
      BASE_URL: http://localhost:5173
      NODE_ENV: development
      STRIPE_API_KEY: sk_test_51PSJfGRvgxYLdiJ7BNE7Bd66RYSlpx4rxDPaZaNA3Gp3BbpTpX9TMiFQzgRMtWViErcK6NJiWrCj1613DtUr756M00OVXx6tdH
      STRIPE_WEBHOOK_SECRET: whsec_7TNIrhY9IN4UZ4HOyd9CIN0QhNQx1nh6
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - ./backend:/home/node/app
    working_dir: /home/node/app
    command: bash -c "npm install && npm start"
    restart: unless-stopped
    depends_on:
      - mongo
      - postgres

  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app
    restart: unless-stopped

  nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./serv/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./dist:/usr/share/nginx/html
      - ./serv/certbot/conf:/etc/letsencrypt:ro
      - ./serv/certbot/www:/var/www/certbot
    restart: unless-stopped
    depends_on:
      - node

  certbot:
    image: certbot/certbot
    volumes:
      - ./serv/certbot/conf:/etc/letsencrypt
      - ./serv/certbot/www:/var/www/certbot
    command: >-
          certonly --reinstall --webroot --webroot-path=/var/www/certbot
          --email zorgluxzorglux@gmail.com --agree-tos --no-eff-email
          -d ecommerce.zorglux.com -v
    depends_on:
      - nginx

  fail2ban:
    image: lscr.io/linuxserver/fail2ban:latest
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    environment:
      - VERBOSITY=-vv #optional
    restart: unless-stopped
    volumes:
      - ./serv/fail2ban:/config

  adminer:
    image: adminer
    ports:
      - 127.0.0.1:8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    restart: unless-stopped

  stripe:
    build:
      context: .
      dockerfile: Dockerfile.stripe
    container_name: stripe-cli
    environment:
      - STRIPE_API_KEY=sk_test_51PSJfGRvgxYLdiJ7BNE7Bd66RYSlpx4rxDPaZaNA3Gp3BbpTpX9TMiFQzgRMtWViErcK6NJiWrCj1613DtUr756M00OVXx6tdH
    command: ["listen", "--forward-to", "http://node:3000/stripe/webhook"]

volumes:
  mongo-data: {}
  postgres-data: {}
